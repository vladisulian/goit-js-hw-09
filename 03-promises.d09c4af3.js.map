{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAe,CACnBC,MAAOC,SAASC,cAAc,kBAC9BC,UAAWF,SAASC,cAAc,iBAClCE,OAAQH,SAASC,cAAc,mBAC/BG,aAAcJ,SAASC,cAAc,oBAEvC,SAASI,EAAcC,EAAUP,GAC/B,OAAO,IAAIQ,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUP,IAEpBU,EAAO,C,SAAEH,E,MAAUP,GAAQ,GAE5BA,EAAM,G,CAQAC,SAASC,cAAc,QAEpCH,EAAaM,aAAaU,iBAAiB,SAASC,IAClDA,EAAQC,iBACR,IAAIC,EAAaC,OAAOpB,EAAaC,MAAMoB,OACvCjB,EAAYgB,OAAOpB,EAAaI,UAAUiB,OAC9C,IAAK,IAAIC,EAAI,EAAGA,EAAItB,EAAaK,OAAOgB,MAAOC,IAC7Cf,EAAc,EAAIe,EAAGH,EAAaG,EAAIlB,GACnCmB,MAAK,EAACf,SAAEA,EAAQP,MAAEA,MACjBuB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBlB,QAAiBP,MAAU,IAGnD0B,OAAM,EAACnB,SAAEA,EAAQP,MAAEA,MAClBuB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoBpB,QAAeP,MAAU,GAE/C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formElements = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  delayStep: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submitButton: document.querySelector('[type=\"submit\"]'),\n};\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(() => console.log(result))\n//   .catch(() => console.log(error));\n\nconst form = document.querySelector('form');\n// console.log(form)\nformElements.submitButton.addEventListener('click', element => {\n  element.preventDefault();\n  let firstDelay = Number(formElements.delay.value);\n  let delayStep = Number(formElements.delayStep.value);\n  for (let i = 0; i < formElements.amount.value; i++) {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formElements","delay","document","querySelector","delayStep","amount","submitButton","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","element","preventDefault","firstDelay","Number","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.d09c4af3.js.map"}