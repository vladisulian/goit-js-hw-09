{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAe,CACnBC,MAAOC,SAASC,cAAc,kBAC9BC,UAAWF,SAASC,cAAc,iBAClCE,OAAQH,SAASC,cAAc,mBAC/BG,aAAcJ,SAASC,cAAc,oBAEvC,SAASI,EAAcC,EAAUP,GAC/B,OAAO,IAAIQ,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUP,UAEpBU,EAAO,CAAEH,WAAUP,S,GAEpBA,E,IAQMC,SAASC,cAAc,QAEpCH,EAAaM,aAAaU,iBAAiB,SAAS,SAAAC,GAClDA,EAAQC,iBAGR,IAFA,IAAIC,EAAaC,OAAOpB,EAAaC,MAAMoB,OACvCjB,EAAYgB,OAAOpB,EAAaI,UAAUiB,OACrCC,EAAI,EAAGA,EAAItB,EAAaK,OAAOgB,MAAOC,IAC7Cf,EAAc,EAAIe,EAAGH,EAAaG,EAAIlB,GACnCmB,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUP,EAAKuB,EAALvB,MACjBwB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAAN3B,EAAM,M,IAGjD4B,OAAM,SAAAL,G,IAAGhB,EAAQgB,EAARhB,SAAUP,EAAKuB,EAALvB,MAClBwB,EAAA3B,GAAS4B,OAAOI,QACd,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAAN3B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst formElements = {\n  delay: document.querySelector('[name=\"delay\"]'),\n  delayStep: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submitButton: document.querySelector('[type=\"submit\"]'),\n};\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// createPromise(2, 1500)\n//   .then(() => console.log(result))\n//   .catch(() => console.log(error));\n\nconst form = document.querySelector('form');\n// console.log(form)\nformElements.submitButton.addEventListener('click', element => {\n  element.preventDefault();\n  let firstDelay = Number(formElements.delay.value);\n  let delayStep = Number(formElements.delayStep.value);\n  for (let i = 0; i < formElements.amount.value; i++) {\n    createPromise(1 + i, firstDelay + i * delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formElements","delay","document","querySelector","delayStep","amount","submitButton","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","element","preventDefault","firstDelay","Number","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.9e6133be.js.map"}